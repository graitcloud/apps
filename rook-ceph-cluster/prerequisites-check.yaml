apiVersion: v1
kind: ConfigMap
metadata:
  name: rook-prerequisites-check
  namespace: rook-ceph
data:
  k8s-version-check: |
    # Run this to verify Kubernetes version (must be 1.28+)
    kubectl version --short | grep -E "Server Version: v1\.(2[89]|3[0-9])"
    
    # Expected output: Server Version: v1.28.x or v1.29.x or v1.30.x
  
  device-check: |
    # Run this to list available devices
    lsblk -d -o NAME,SIZE,TYPE,MOUNTPOINT | grep -v loop
    
    # Look for devices like sdb, sdc, etc. (not sda which is usually root)
    # Devices should not have partitions or filesystems
    
  node-check: |
    # Run this to verify node readiness
    kubectl get nodes -o wide
    
    # Ensure all nodes are Ready and have sufficient resources
    
  storage-check: |
    # Check if any storage classes already exist
    kubectl get storageclass
    
    # Check if any PVCs are using existing storage
    kubectl get pvc --all-namespaces
    
  namespace-check: |
    # Check if rook-ceph namespace exists
    kubectl get namespace rook-ceph
    
    # If it exists, check what's in it
    kubectl get all -n rook-ceph
    
  ceph-requirements: |
    # Prerequisites for Rook Ceph:
    # 1. Kubernetes 1.28+ 
    # 2. Raw disk(s) available (not partitioned)
    # 3. Sufficient memory (4GB+ recommended)
    # 4. Network connectivity between nodes
    # 5. No conflicting storage operators 